//
//  PhotoDto.swift
//  SocialApp
//
//  Created by Дима Давыдов on 23.11.2020.
//

import Foundation

struct PhotoSize: Codable {
    // (string) — тип копии
    // s — пропорциональная копия изображения с максимальной стороной 75px;
    // m — пропорциональная копия изображения с максимальной стороной 130px;
    // x — пропорциональная копия изображения с максимальной стороной 604px;
    // o — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 130px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева изображения с максимальной шириной 130px и соотношением сторон 3:2.
    // p — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 200px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 200px и соотношением сторон 3:2.
    // q — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 320px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 320px и соотношением сторон 3:2.
    // r — если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 510px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 510px и соотношением сторон 3:2
    // y — пропорциональная копия изображения с максимальной стороной 807px;
    // z — пропорциональная копия изображения с максимальным размером 1080x1024;
    // w — пропорциональная копия изображения с максимальным размером 2560x2048px.

    var type: String
    // URL копии.
    var url: String
    // высота в px.
    var width: Int
    // ширина в px.
    var height: Int
}

struct PhotoDto: Codable {
    // идентификатор фотографии.
    var id: Int
    // идентификатор альбома, в котором находится фотография.
    var albumId: Int
    // идентификатор владельца фотографии.
    var ownerId: Int
    // идентификатор пользователя, загрузившего фото (если фотография размещена в сообществе).
    // Для фотографий, размещенных от имени сообщества, user_id = 100.
    var userId: Int
    //текст описания фотографии.
    var text: String
    // дата добавления в формате Unixtime.
    var date: Int
    
    // массив с копиями изображения в разных размерах
    var sizes: [PhotoSize]

    // ширина оригинала фотографии в пикселах.
    var width: Int?
    // высота оригинала фотографии в пикселах.
    var height: Int?
    
    enum CodingKeys: String, CodingKey {
        case id
        case albumId = "album_id"
        case ownerId = "owner_id"
        case userId = "user_id"
        case text
        case date
        case sizes
        case width
        case height
    }
}
